# Introducción a Shell

Un Shell es un programa de computador que presenta una interfaz en línea de comando que permite ejecutar funciones en el computador utilizando comandos especiales en vez de tener un control a través de una interfaz gráfica que combina el uso de un ratón o *mouse* y un teclado de computador.

<<<<<<< HEAD
=======
INSERTAR FOTO

COMENZAR CON CONEXIÓN AL SERVIDOR (10 minutos)

Path relativo y absoluto

Algunos comandos cd, mkdir, pwd

ejercicio (5 minutos) en equipos de encontrar el archivo.txt y poner el path absoluto de la ubicación del archivo.

Repaso de comandos

## Preparación del directorio de trabajo

-   Ruta / Camino absoluto

    ``` {.bash code-copy="true" eval="false"}
    cd /home/usuario/data/
    ```

-   Ruta / Camino relativo

    ``` {.bash code-copy="true" eval="false"}
    cd ../ # Ir a la carpeta anterior
    ```

## **Comandos básicos**

| Comandos | Información | Argumentos |
|----|----|----|
| `ssh` | Conexión a servidores | ssh usuario\@servidor.mx |
| `ls` | Observar el contenido de los archivos en una carpeta | ls directorio/ |
| `cd` | Moverse de directorios | cd /home/usuario/data/ |
| `mkdir` | Crear un nuevo directorio | mkdir data |
| `rmdir` | Eliminar el directorio | rmkdir -rf data |
| `nano`/`vim` | Editores de texto plano | nano Archivo.txt / vim Archivo.txt |
| `cp` | Copiar archivos | cp Archivo1.txt /home/usuario/data/ |
| `mv` | Mover un archivo o carpeta |  |
| `echo` | Para llamar y/o declarar variables | echo "Hello world" |
| `chmod` | Cambiar permisos del usuario | chmod 777 data/ |
| `rsync` | Descargar o subir archivos |  |
| `scp` | Descargar o subir archivos |  |

------------------------------------------------------------------------

# Servidor Bettertab en RStudio

>>>>>>> a62b0c9c7d0671ec3adc903c91b3afb705c2de25
El **servidor Betterlab** es una instancia de **RStudio Server** montada en la nube para el taller.

**¿Para qué sirve?** Te permite usar RStudio desde el navegador, conectándote a un entorno Linux ya configurado con todas las herramientas y datos necesarios.

### **Ventajas**

-   **Preconfigurado**: R, RStudio, paquetes y bioherramientas instalados de antemano.

-   **Sin instalaciones locales**: solo necesitas un navegador.

-   **Multiusuario:** cada quien con su cuenta, aislados y seguro.

## **Paso 1: Verifica los requisitos previos**

Antes de comenzar, asegúrate de contar con lo siguiente:

-   **Un navegador web actualizado** (Chrome, Firefox o Edge).

-   **Credenciales de acceso:** nombre de usuario y contraseña, proporcionados por el administrador del servidor.

-   **El enlace de acceso al servidor Betterlab**: [`https://bioinformatica.matmor.unam.mx/rstudio/auth-sign-in?appUri=%2F`](https://bioinformatica.matmor.unam.mx/rstudio/auth-sign-in?appUri=%2F)

> Los instructores te han proporcionado la lista de usuarios de Betterlab.Escribe tu nombre en alguno de los usuarios disponibles y toma nota de tu usuario y contraseña.

## **Paso 2: Accede al enlace**

1.  Abre tu navegador web e ingresa el siguiente URL en la barra de direcciones (copia y pega o da clic al link): [`https://bioinformatica.matmor.unam.mx/rstudio/auth-sign-in?appUri=%2F`](https://bioinformatica.matmor.unam.mx/rstudio/auth-sign-in?appUri=%2F)

2.  Presiona **Enter** para cargar la página.

![](https://iscb-rsg-mexico.github.io/Workshop_Bash2024/img/BetterLab1.png){width="319"}

## **Paso 3: Inicia sesión**

En la pantalla de inicio de sesión, introduce tus credenciales, por ejemplo:

-   **Usuario:** alumno10.

-   **Contraseña:** (Escribe la contraseña correspondiente de la hoja de usuarios)

-   Haz clic en **Iniciar sesión** o presiona **Enter**.

## **Paso 4: Explora RStudio en Bettertab**

Una vez que hayas iniciado sesión, se abrirá la interfaz de usuario de RStudio. Aquí puedes:

-   Crear, cargar y ejecutar scripts en R.

-   Gestionar tus proyectos.

-   Acceder a datos y recursos alojados en el servidor Bettertab.

-   Cuando entramos veremos cuatro ventanas:

![](https://iscb-rsg-mexico.github.io/Workshop_Bash2024/img/BetterLab2.jpg)

### **Script o Editor de Código (Ventana superior izquierda)**

-   Uso: Aquí escribes, editas y guardas tus **scripts** de R.

**Características principales:**

-   Puedes abrir varios archivos a la vez en pestañas.

-   Permite ejecutar líneas o bloques de código presionando Ctrl+Enter (o Cmd+Enter en Mac).

-   Prueba: Haz el comando **`getwd()`** para saber cual es tu directorio de trabajo

![](https://iscb-rsg-mexico.github.io/Workshop_Bash2024/img/BetterLab3.png)

### **Consola (Console) (Ventana inferior izquierda)**

-   Uso: Aquí se ejecuta el código de manera directa.

-   Muestra los resultados y mensajes de salida.

**Características**:

-   Puedes escribir comandos directamente para probar ideas rápidas.

-   Repite el mismo ejercicio anterior.

### **3.4.3 3. Entorno y/o Historial (Ventana superior derecha)**

-   Pestaña Entorno: Muestra los objetos que has creado (como variables, funciones, y datos cargados).

-   Pestaña Historial: Muestra todos los comandos ejecutados en la sesión.

-   Tip: Puedes hacer clic en los objetos para inspeccionarlos o eliminarlos (botón de escoba).

![](https://iscb-rsg-mexico.github.io/Workshop_Bash2024/img/BetterLab4.png)

### **Archivos, Gráficos, Paquetes, y Ayuda (Ventana inferior derecha)**

Uso:

-   Archivos: Explora las carpetas y archivos en tu directorio de trabajo.

-   Gráficos: Muestra los gráficos generados con tu código.

-   Paquetes: Administra e instala paquetes de R.

-   Ayuda: Busca documentación sobre funciones y comandos de R.

![](https://iscb-rsg-mexico.github.io/Workshop_Bash2024/img/BetterLab5.png)

### **Terminal (Bash)**

<div>

Pestaña en la ventana inferior izquierda, junto a la Consola.

</div>

Uso:

-   Es un terminal de línea de comandos para ejecutar comandos en Bash directamente desde RStudio.

-   Útil para tareas del sistema, como mover archivos, instalar software o trabajar con Git.

-   Ejemplo: Puedes usar **ls** para listar archivos.

    ![](https://iscb-rsg-mexico.github.io/Workshop_Bash2024/img/BetterLab6.png)

    **Paso 5: Cerrar sesión**

    Cuando termines de trabajar:

    1.  Haz clic en el botón **Cerrar sesión** ubicado en la esquina superior derecha.

    2.  Cierra la pestaña del navegador para garantizar que tu sesión quede cerrada.

# Introducción al Shell

### 🔹 ¿Qué es un Shell?

Un Shell es un programa que permite interactuar con el sistema operativo

utilizando comandos en lugar de una interfaz gráfica (GUI).

### 🎯 ¿Por qué usar un Shell?

1️⃣ Muchas herramientas bioinformáticas solo se usan en Shell.

2️⃣ Permite automatizar tareas repetitivas.

3️⃣ Minimiza errores humanos.

4️⃣ Hace que los pasos sean reproducibles y se puedan compartir fácilmente.

5️⃣ Facilita el acceso a servidores remotos para análisis de datos grandes.

================================

### 🔹 Navegación en el sistema de archivos:

================================

### 📌 1️ Ver el directorio en el que te encuentras:

------------------------------------------------------------------------

`pwd`\
👉 Este comando significa "Print Working Directory". Nos dice en qué carpeta estamos parados.

------------------------------------------------------------------------

### 📌 2️ Listar los archivos y carpetas en el directorio actual:

`ls`\
👉 Muestra los archivos y directorios que existen en esa ubicación.

`ls -a` Lista TODO, incluidos ocultos

------------------------------------------------------------------------

### 📌 3️ Cambiar de directorio:

`cd nombre_del_directorio`\
👉 Esto te lleva al directorio especificado.

## 👉 Ejemplo:

Si estás en `/home/dcuser` y quieres entrar a un subdirectorio:

`cd dc_workshop`

------------------------------------------------------------------------

### 📌 4 Subir un nivel en la estructura de carpetas:

`cd ..`

### 📌 5 Volver al directorio principal:

`cd ~`

### 📌 6 Atajos útiles:

-   `cd -` te lleva al último directorio en el que estuviste.

================================

### **🔹 Autocompletado (Tab):**

Es una función que te permite completar nombres de archivos o carpetas

al presionar la tecla "`Tab`".

👉 Ejemplo:

Si escribes:

`cd dc<tab>`\
\# El Shell completará el nombre a `dc_workshop` si existe.

## 🔐 2. Permisos de archivos

**Ver permisos** con `ls -l`

``` {#code .bash}
ls -l youfoundit.txt
```

``` {#output .bash}
-rw-rw-r-- 1 usuario grupo 0 May 27 23:16 youfoundit.txt
```

![](images/clipboard-1576158875.png){width="519"}

**Quitar permiso de escritura** al dueño con `chmod`:

```         
chmod -w youfoundit.txt
ls -l youfoundit.txt
# -r--r--r-- 1 usuario grupo 0 May 27 23:16 youfoundit.txt
```

## 3. Rutas absolutas vs. relativas

-   **Ruta absoluta**: parte de `/`

    ```         
    cd /home/usuario/dc_workshop/.hidden
    ```

    **Ruta relativa**: parte de tu directorio actual

    ```         
    cd dc_workshop/.hidden
    ```
