# Estructuras de datos en R

No importa cuán complejo sea nuestro análisis, todos los datos en R pertenecerán a alguno de los siguientes tipos:

-   doble
-   entero
-   complejo
-   lógico
-   caracter

Este concepto nos ayudará a aprender una de las herramientas más poderosas de R; la manipulación de diversos tipos de datos en conjunto en lo que se denomina un **data-frame.**

![](figures/r1.png){fig-align="center"}

Además de los tipos de datos, existen diferentes maneras de organizar los datos en R, denominadas estructuras de datos. La estructura de datos más simple es un vector, una secuencia de datos del mismo tipo. Un vector se puede crear con la función `c()` .

``` r
> char_vector<-c("a","b","c","c","d")
> typeof(char_vector)
```

Una estructura de datos más compleja es el factor, que contiene nombres de las categorías (llamados niveles) y una secuencia de ocurrencias de dichas categorías.

``` r
char_factor<-as.factor(char_vector)
char_factor
```

`levels: a b c`

::: callout-note
## Nota!

Si usamos "" para definir un objeto, R lo leerá como un caracter, independientemente de que estemos escribiendo números. La mayúscula después de un número indica que R lo guardará como entero.
:::

# Manipulación de data frames

Los data frames son estructuras de datos potentes en R. Podemos comenzar a crear un conjunto de datos simulado:

``` r
musician <- data.frame(people = c("Medtner", "Radwimps", "Shakira"),
                         pieces = c(722,187,68),
                         likes = c(0,1,1))
> musician
```

El contenido de nuestro nuevo objeto:

```         
     people pieces likes 
   1  Medtner    722     0 
   2 Radwimps    187     1 
   3  Shakira     68     1
```

Para comprobar que nuestro objeto es un data frame podemos usar `class()`.

``` r
class(musician)
```

```         
"data.frame"
```

Un dataframe es una colección de vectores (una lista), cuyos componentes deben ser del mismo tipo de datos dentro de cada vector.![](images/clipboard-2373541360.png)

Podemos explorar nuestro objeto extrayendo columnas con el operador `$`.

``` r
musician$people
```

Podemos también extraer información de un lugar específico en nuestros datos utilizando la nomenclatura de matriz `[-,-]` donde el primer número dentro de los corchetes especifica el número de fila y el segundo el número de columna:

![](figures/r2.png){fig-align="center"}

``` r
musician[3,2]
```

``` r
> musician[1,"pieces"] 
```
