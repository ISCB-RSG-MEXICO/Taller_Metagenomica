# Introducci칩n a R

**R** se utiliza para nombrar un **lenguaje de programaci칩n y el software que lee e interpreta las instrucciones escritas en el script**. Se especializa en el an치lisis estad칤stico y la generaci칩n de gr치ficos.

Algunas de las ventajas de trabajar con R son:

-   El c칩digo R es reproducible
-   R produce gr치ficos de alta calidad
-   R tiene una gran comunidad
-   R es interdisciplinario
-   R trabaja con datos de todos los colores y tama침os.
-   춰R es gratis!

Por su parte, **RStudio** es el programa (en forma de interfaz gr치fica) m치s popular para la escritura de scripts que adem치s nos permite navegar por los archivos, inspeccionar variables y visualizar nuestros gr치ficos.

::: {.callout-important appearance="minimal"}
## Navega la interfaz de RStudio

T칩mate un momento para explorar la interfaz de RStudio.
:::

![](Welcome_Rscript.png)

Al abrir R Studio por primera vez, ver치s tres paneles en la pantalla. Para ver los cuatro paneles de la imagen, deber치s crear un nuevo script. Ve a la pesta침a: **Archivo/File** \> **New File/Nuevo Archivo** \> **R Script.**

Comenzando de la esquina superior izquierda tenemos:

1.  El editor de c칩digo fuente o editor de scripts
2.  El panel de espacio de trabajo e historial
3.  Consola de R Studio y,
4.  Panel de archivos, gr치ficos, paquetes y ayuda

## **Revisi칩n de la configuraci칩n**

Al igual que en la Shell o l칤nea de comandos, es recomendable mantener los datos relacionados en una sola carpeta. En RStudio, a esta carpeta se le llama **directorio de trabajo** y es donde se guardar치n y buscar치n los archivos. Cuando se necesite comprobar la ubicaci칩n del actual directorio de trabajo, se utiliza `getwd()` directo en la consola de R Studio, en el editor de scripts o en el panel de archivos.

Si tu directorio de trabajo actual no es el esperado, puedes cambiarlo haciendo clic en el icono del engranaje azul en la opci칩n *Establecer como directorio de trabajo/Set as a working directory.*

``` r
> setwd("~/dc_workshop/taxonomy")
```

## C칩digo en R

En la consola se pueden escribir y ejecutar comandos de manera inmediata. Aqu칤 se mostrar치n los resultados de la ejecuci칩n de esos comandos (como en Shell). Puedes escribir instrucciones cuando veas signo "`>`" en la consola y pulsar "`Enter`" para ejecutar.

``` r
> 4+3
> addition <- 4+3
> substraction <-2+1
> total <- addition +substraction
> total
```

Sin embargo, estas 칩rdenes y operaciones se olvidar치n al cerrar la sesi칩n. Aqu칤 entra en juego la 游눪**reproducibilidad**游눪.

Por ello es conveniente escribir los comandos que queremos guardar en nuestro editor de scripts y guardarlo peri칩dicamente. Podemos ejecutar nuestras l칤neas de c칩digo en el script con el atajo `Ctrl` + `Enter` (`Cmd` + `Return`). De esta manera el comando de la l칤nea actual ser치 seleccionado y se enviar치 por la consola para su ejecuci칩n.

El tiempo puede ser enemigo o aliado de la memoria. Por ello es importante asegurarnos de recordar por qu칠 escribimos qu칠 comandos en nuestros scripts. Se pueden dejar comentarios (l칤neas de texto no ejecutables) comenzando una l칤nea con `#`.

``` r
#Hagamos matem치ticas en RStudio. Cu치ntas veces al a침o los super mercados cambian el pan que usan de muestra?
#Si es que lo hacen cada 15 d칤as:
> 365/15
```

## Referencias

[R para reci칠n salidos del cascar칩n](https://www.uvm.edu/~tdonovan/RforFledglings/)
